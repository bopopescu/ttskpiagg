{
  "features": [
  {
    "name": "umts_eric",
    "sql":[ {
   "SELECT": "'unassigned' as MGR_RUN_ID, min(region) as region, min(market) as market, min(subnetwork_2) as subnetwork_2, hl_date as period_start_time, 60 as PERIOD_DURATION, min(mecontext) as mecontext, utrancell, sum(pmattnonblindinterfreqhocsspeech12) as pmattnonblindinterfreqhocsspeech12, sum(pmcelldowntimeauto) as pmcelldowntimeauto, sum(pmcelldowntimeman) as pmcelldowntimeman, sum(pmchswitchattempturafach) as pmchswitchattempturafach, sum(pmchswitchsuccurafach) as pmchswitchsuccurafach, sum(pmdltrafficvolumeps128) as pmdltrafficvolumeps128, sum(pmdltrafficvolumeps16) as pmdltrafficvolumeps16, sum(pmdltrafficvolumeps384) as pmdltrafficvolumeps384, sum(pmdltrafficvolumeps64) as pmdltrafficvolumeps64, sum(pmdltrafficvolumeps8) as pmdltrafficvolumeps8, sum(pmdltrafficvolumepscommon) as pmdltrafficvolumepscommon, sum(pmdltrafficvolumepsinths) as pmdltrafficvolumepsinths, sum(pmdltrafficvolumepsstr128) as pmdltrafficvolumepsstr128, sum(pmdltrafficvolumepsstr16) as pmdltrafficvolumepsstr16, sum(pmdltrafficvolumepsstr64) as pmdltrafficvolumepsstr64, sum(pmfailnonblindinterfreqhofailrevertcsspeech12) as pmfailnonblindinterfreqhofailrevertcsspeech12, sum(pmnodirretryatt) as pmnodirretryatt, sum(pmnoloadsharingrrcconncs) as pmnoloadsharingrrcconncs, sum(pmnoloadsharingrrcconnps) as pmnoloadsharingrrcconnps, sum(pmnonormalnassignreleasecs) as pmnonormalnassignreleasecs, sum(pmnonormalrabreleasespeech) as pmnonormalrabreleasespeech, sum(pmnorabestablishattemptspeech) as pmnorabestablishattemptspeech, sum(pmnorabestablishsuccessspeech) as pmnorabestablishsuccessspeech, sum(pmnorabestablishattemptpacketinteractive) as pmnorabestablishattemptpacketinteractive, sum(pmnorabestablishsuccesspacketinteractive) as pmnorabestablishsuccesspacketinteractive, sum(pmnosysrelspeechneighbr) as pmnosysrelspeechneighbr, sum(pmnosystemnassignreleasecs) as pmnosystemnassignreleasecs, sum(pmnosystemrabreleasespeech) as pmnosystemrabreleasespeech, sum(pmnotimescellfailaddtoactset) as pmnotimescellfailaddtoactset, sum(pmsamplesdchdlrlcuserpacketthp) as pmsamplesdchdlrlcuserpacketthp, sum(pmsampleshsdlrlcuserpacketthp) as pmsampleshsdlrlcuserpacketthp, sum(pmsamplesulrssi) as pmsamplesulrssi, sum(pmsuccnonblindinterfreqhocsspeech12) as pmsuccnonblindinterfreqhocsspeech12, sum(pmsumbestamr12200rabestablish) as pmsumbestamr12200rabestablish, sum(pmsumbestamr4750rabestablish) as pmsumbestamr4750rabestablish, sum(pmsumbestamr5900rabestablish) as pmsumbestamr5900rabestablish, sum(pmsumbestamr7950rabestablish) as pmsumbestamr7950rabestablish, sum(pmsumbestamrnbmmrabestablish) as pmsumbestamrnbmmrabestablish, sum(pmsumbestamrwbrabestablish) as pmsumbestamrwbrabestablish, sum(pmsumbestcs12establish) as pmsumbestcs12establish, sum(pmsumdchdlrlcuserpacketthp) as pmsumdchdlrlcuserpacketthp, sum(pmsumhsdlrlcuserpacketthp) as pmsumhsdlrlcuserpacketthp, sum(pmsumulrssi) as pmsumulrssi, sum(pmtotnorrcconnectreqcs) as pmtotnorrcconnectreqcs, sum(pmtotnorrcconnectreqcssucc) as pmtotnorrcconnectreqcssucc, sum(pmtotnorrcconnectreqps) as pmtotnorrcconnectreqps, sum(pmtotnorrcconnectreqpssucc) as pmtotnorrcconnectreqpssucc, 0 as pmNoTimesRlAddToActSet, 0 as pmSamplesBestPsEulRabEstablish, 0 as pmSumBestPsEulRabEstablish, 0 as pmSamplesEulRlcUserPacketThp, 0 as pmSumEulRlcUserPacketThp, 0 as pmSumDchUlRlcUserPacketThp, 0 as pmSamplesDchUlRlcUserPacketThp, 0 as pmSumBestPsHsAdchRabEstablish, 0 as pmSamplesBestPsHsAdchRabEstablish, 0 as pmNoSysRelSpeechULSynch, 0 as pmNoOfTermSpeechCong, 0 as pmNoSysRelSpeechSoHo, 0 as pmNoFailOutIratHoSpeechReturnOldChPhyChFail, 0 as pmNoFailOutIratHoSpeechReturnOldChNotPhyChFail, 0 as pmNoFailOutIratHoSpeechUeRejection, 0 as pmNoAttOutIratHoSpeech, 0 as pmNoSuccessOutIratHoSpeech, 0 as pmNoFailOutIratHoSpeechGsmFailure, CONCAT(SUBSTR(UtranCell,1,1),SUBSTR(UtranCell,-1,1),SUBSTR(UtranCell,-2,1)) as hl_umtssort, hl_date as HL_Date_Hour, hl_date as HL_Date, utrancell as HL_Sector, case when substring(UtranCell,1,1) = 'U' THEN 'AWS' ELSE 'PCS' end as HL_Sectorlayer, nullif(concat('U',substring(UtranCell,2,8)),'') as HL_Site, 'unassigned' as HL_Cluster, 'unassigned' as HL_Area, HL_Market ",
   "GROUPBY": "hl_date, utrancell, mecontext, hl_market "
  } ]
  } ]
}